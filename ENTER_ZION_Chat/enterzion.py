import asyncio
import random

from pywebio.input import select, TEXT, input, radio, input_group, actions
from pywebio.output import put_html, toast, put_markdown, clear
from pywebio_battery import put_audio

from pywebio import start_server
from pywebio.output import toast, put_progressbar, set_progressbar, put_markdown, put_scrollable, put_button, put_buttons, put_scope
from pywebio.session import run_async, run_js

path = ""
online_users = dict()
chat_msgs = []
sounds = dict()


def add_sounds(sounds_dict: dict):
    """" –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–∏ """
    global sounds, path
    for sound_name, sound in sounds_dict.items():
        sounds[sound_name] = path + "\\" + sound


def specify_the_path(path_to_sounds):
    """ –ì–æ–≤–æ—Ä–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –≥–¥–µ –ª–µ–∂–∞—Ç —Ñ–∞–π–ª—ã —Å–æ –∑–≤—É–∫–æ–º"""
    global path

    path = path_to_sounds


def add_user(nickname, sound):
    """ –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –∑–≤—É–∫–æ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π """
    global online_users
    print(path + "/" + sound)
    online_users[nickname] = open(path + "/" + sound, "rb").read()


def check_name(name: str) -> str:
    """ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç """
    bad_words = ["–ª–æ—Ö"]
    for bad_word in bad_words:
        if bad_word in name.lower():
            return "–¢—ã —Å–µ—Ä—å—ë–∑–Ω–æ –¥—É–º–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ —Å–º–µ—à–Ω–æ? üò¢"
    if name in online_users.keys():
        return f"–¢–æ –µ—Å—Ç—å —Ç—ã —Å–µ–π—á–∞—Å –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤—ã–¥–∞—Ç—å —Å–µ–±—è –∑–∞ {name}?!?!!\n–ú–µ–Ω—è –Ω–µ –æ–±–º–∞–Ω—É—Ç—å -_-"


def joke(joke_sound):
    """ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    number = random.randint(1, 5)
    if number == 1:
        put_audio(open(f"{path}\\{joke_sound}", "rb").read(), autoplay=True)
        return "–•–∞-–•–∞-–•–∞, —è —Ç–µ–±—è –Ω–∞–¥—É—Ä–∏–ª –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å =)"


def check_rat(answer):
    """ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ '–∫—Ä—ã—Å—É', —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏–∫–æ–º—É –Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª –æ –ø–µ—Ä–µ–ø–∏—Å–∫–µ """
    if answer == "–Ø –Ω–∏–∫–æ–º—É –Ω–∏—á–µ–≥–æ –Ω–µ —Ä–∞—Å—Å–∫–∞–∂—É, —á–µ—Å—Ç–Ω–æ":
        return toast("–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä!")
    else:
        return toast("–Ø –¥–∞—é —Ç–µ–±–µ –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å –æ—Å–º—ã—Å–ª–∏—Ç—å —Å–≤–æ—ë —Ä–µ—à–µ–Ω–∏–µ üò°")


async def delete_chat(alarm_sound, time_sound, shutdown_sound, startup_sound):
    """ –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ """
    chat_msgs.append(("–°–∏—Å—Ç–µ–º–∞", "–û –Ω–µ—Ç... –ß–¢–û –ü–†–û–ò–°–•–û–î–ò–¢?! –ö–¢–û-–¢–û –°–û–ë–ò–†–ê–ï–¢–°–Ø –û–ß–ò–©–ê–¢–¨ –ü–ï–†–ï–ü–ò–°–ö–£!!!",
                      open(f"{path}\\{alarm_sound}", "rb").read()
                      ))
    await asyncio.sleep(3)
    chat_msgs.append(("–°–∏—Å—Ç–µ–º–∞", "–í–ù–ò–ú–ê–ù–ò–ï, –ü–†–û–ò–°–•–û–î–ò–¢ –£–î–ê–õ–ï–ù–ò–ï –ü–ï–†–ï–ü–ò–°–ö–ò",
                      open(f"{path}\\{time_sound}", "rb").read()
                      ))
    await asyncio.sleep(1)
    for i in range(3, 0, -1):
        chat_msgs.append(("–°–∏—Å—Ç–µ–º–∞", f"–ü–µ—Ä–µ–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ {i}...",
                          open(f"{path}\\{time_sound}", "rb").read()
                          ))
        await asyncio.sleep(1)
    await asyncio.sleep(2)

    chat_msgs.append(("–°–∏—Å—Ç–µ–º–∞", "–í—ã–∫–ª—é—á–µ–Ω–∏–µ...",
                      open(f"{path}\\{shutdown_sound}", "rb").read()
                      ))
    await asyncio.sleep(3)

    chat_msgs.append(("–°–∏—Å—Ç–µ–º–∞", "–ó–∞–ø—É—Å–∫...",
                      open(f"{path}\\{startup_sound}", "rb").read()
                      ))
    await asyncio.sleep(3)
    clear("chat")
    chat_msgs.clear()
    toast("–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")


async def header():
    """ –í—Å—Ç–∞–≤–ª—è–µ–º '—à–∞–ø–∫—É' —Å–∞–π—Ç–∞, —Ç–æ –µ—Å—Ç—å –ª–æ–≥–æ """

    # –≤—Å—Ç–∞–≤–ª—è–µ–º HTML –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ö–µ–¥–µ—Ä —Å –ª–æ–≥–æ
    put_html("""
            <a href="https://enterzion.io/"  target="_blank"><h1 style="justify-content: center"><img style="height:20px" src="https://enterzion.io/static/base_templates/images/logo.svg"></img></h1></a>
    """)

    # –≤—Å—Ç–∞–≤–ª—è–µ–º HTML –∫–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å —Å—Ç–∏–ª–∏
    put_html("""
          <style>
                body {
                    background-color: white; /* –¶–≤–µ—Ç —Ñ–æ–Ω–∞ */
                }
                .scrollable-border{
                    background-color: white; /* –¶–≤–µ—Ç —Ñ–æ–Ω–∞ */
                }
        </style>
    """)


async def clear_chat():
    """ –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞ (—Ñ—É–Ω–∫—Ü–∏—è delete_chat —Ç–æ–ª—å–∫–æ –æ–ø–æ–≤–µ—â–∞–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏, –∞ –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞) """
    global chat_msgs
    while True:
        await asyncio.sleep(0.1)
        if not chat_msgs:
            clear("chat")
            await asyncio.sleep(0.4)


async def refresh_msg(nickname):
    """ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —É –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π """

    global chat_msgs, path
    last_idx = len(chat_msgs)
    while True:
        await asyncio.sleep(0.1)

        for m in chat_msgs[last_idx:]:
            if m[0] == "–°–∏—Å—Ç–µ–º–∞":
                put_markdown(f"`{m[0]}`: {m[1]}", scope="chat")
                try:
                    put_audio(m[2], autoplay=True)
                except:
                    pass
            elif m[0] != nickname:  # if not a message from current user
                put_markdown(f"`{m[0]}`: {m[1]}", scope="chat")
                try:
                    put_audio(m[2], autoplay=True)
                except:
                    pass

        last_idx = len(chat_msgs)
